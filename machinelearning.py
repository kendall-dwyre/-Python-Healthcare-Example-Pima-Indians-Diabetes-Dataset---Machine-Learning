# -*- coding: utf-8 -*-
"""machineLearning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16LSkpIEbMG0FTU9CUrnuaYgZv_SRXJei

The purpose of this notebook is to demonstrate knowledge and competency of machine learning skills through the "diabetes.csv" dataset.
"""

import pandas as pd
import numpy as np

"""One of the first things to do when you get a file is to prep the data for analysis.  For instance, we are looking for bad data, nulls, etc."""

diabetes = pd.read_csv('diabetes.csv')
print(diabetes.head())

"""The code below is some exploratory analysis to see what we need to do to prep the data correctly."""

len(diabetes) # 768 (this is the length of our file)
diabetes.dtypes # This is important for us to see the different data types of the variables
diabetes.describe() # This gives us a summary of the data

"""Are there nulls?"""

diabetes.isnull().sum() # No nulls

"""In the event that there were nulls, which there are not, we could run some code like what is below.  It will be commented out for the sake of this project."""

#diabetes_clean = diabetes.dropna()
#len(diabetes_clean)
#diabetes_clean.isnull().sum # Rerunning to check for nulls

"""Now that we have looked at the data and took necessary measures to make sure it is clean, we can move forward.  The next step is splitting the data into a training and test step.  However, we need to identify the target / label attribute that we want to work with."""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, MinMaxScaler, OneHotEncoder

# One-hot encoding for the 'category' feature
encoder = OneHotEncoder(sparse = False)
encoded_categories = encoder.fit_transform(diabetes[['category']])
encoded_diabetes = pd.DataFrame(encoded_categories, columns = encoder.get_feature_names_out(['category']))

# Concatenate the encoded categories back to the original DataFrame
df = pd.concat([diabetes.drop('category', axis=1), encoded_diabetes], axis=1)